#!/bin/bash

##
## @file submit_resbos_and_pmcs.sh
##
## Description of the script file
##
## @author cuto <Jakub.Cuth@cern.ch>
## @date 2014-02-20

DRYRUN="echo "
DRYRUN=

QSUB=/usr/bin/qsub

# SETTINGS
resbosintface=/prj_root/7055/wmass2/jcuth/epmcs_analysis/resbosa_interface
pythiaintface=/not/yet
dyresintface=/prj_root/7055/wmass2/jcuth/DYRES/dyres-v0.94/bin
SCRIPTNAME=genpmcs_OneWeight_TMPL

#PROCESS
process=reszee
process=reswenu
process=reswenu_CT10_newb0
#process=reswmunu
#process=reszee
#process=pythwenu

##pdf
gridDir=$resbosintface/grids/45PDFs
central=00
##theo unc
gridDir=$resbosintface/grids/w/1s
central=central
##theo unc -- z 
gridDir=$resbosintface/grids/z/1s
central=central
##theo unc -- non std
gridDir=$resbosintface/grids/w/1s2
central=central66
##pdf
gridDir=$resbosintface/grids/CT10nnlo_correctb0max
central=00

## testing DYRES
#process=dyreswenu
#gridDir=.not.needed.
#central=central66


# ONE JOB
prepare_script(){
    mainBase=`basename $main .out`
    ykBase=`echo $mainBase | sed "s|w321|yk|g"`
    #sampleName=`echo $mainBase | rev | cut -d. -f1 | rev`
    sampleName=`echo $mainBase | grep -o "tev2_\(pmcs\)\{0,1\}[0-9]\{2\}"`
    outName=genpmcs_${process}_${sampleName}_${randomseed}
    #echo " process ${process} sampleName ${sampleName} randomseed ${randomseed} "
    cat $SCRIPTNAME.sh | sed "s|MAIN|$gridDir/$mainBase.out|g;
                              s|YK|$gridDir/$ykBase.out|g;
                              s|CENTRAL|_$central|g;
                              s|NODENUM|$nodenum|g;
                              s|GRIDDIR|$gridDir|g;
                              s|GENPROCESS|$process|g;
                              s|EDITWARNING|Warning! Do not edit this file, it was generated automatically: `date`|g;
                              s|SAMPLENAME|$sampleName|g;
                              s|RANDOMSEED|${randomseed}|g" > scripts/$outName.sh

    if [[ $process == *local* ]]
    then
        chmod +x scripts/$outName.sh
    fi
}

run_dyres(){
    process=${process}local
    randomseed=$((2010117))
    main="central66"
    prepare_script
}

# 2010000 - local runs
#     117 - just to meet the cab seed number
setup_local(){
    process=${process}local
    randomseed=$(($i+2010117))
    ###### submit central
    outName="empty"
    main=`ls -1 $gridDir | grep w321 | grep .$central.`
    pmcsmain=`echo $main | sed "s|$central|pmcs$central|g"`
    prepare_script
    echo `pwd`/scripts/$outName.sh

    ###### submit non-central with dependency on central
    for main in `ls -1 $gridDir | grep w321 | grep -v .$central.`;
    do
        prepare_script
        echo `pwd`/scripts/$outName.sh
    done

    main=$pmcsmain
    prepare_script
    echo `pwd`/scripts/$outName.sh
}


# one chain job on cab repaired
# 1010000 - ct10nn
# 1020000 - cteq66
# 1010000 - 1sigma
chain_job(){
    for i in $seedlist
    do
        randomseed=$(($i+1010000))
        ###### submit central
        outName="empty"
        #main=`ls -1 $gridDir | grep w321 | grep ".${central}."`
        main=`ls -1 $gridDir | grep w321 | grep w+ | grep "_${central}_"`
        pmcsmain=`echo $main | sed "s|_$central|_pmcs$central|g"`
        prepare_script
        central_jobname=$($DRYRUN $QSUB scripts/$outName.sh)
        echo submitted $outName $central_jobname 

        ###### submit non-central with dependency on central
        sample_index=0
        #for main in `ls -1 $gridDir | grep w321 | grep -v ".${central}."`;
        for main in `ls -1 $gridDir | grep w321 | grep w+ | grep -v "_${central}_"`;
        do
            prepare_script
            noncentral_jobnames[$sample_index]=$($DRYRUN $QSUB -W depend=afterok:$central_jobname scripts/$outName.sh)
            echo submitted  $outName ${noncentral_jobnames[$sample_index]}
            (( sample_index++ ))
        done

        ###### submit tuplemaker and pmcs with dependence on non-centrals
        IFS=:
        noncentral_jobnames_list="${noncentral_jobnames[*]}"
        unset IFS

        main=$pmcsmain
        prepare_script
        pmcsmain_jobname=$($DRYRUN $QSUB -W depend=afterok:$noncentral_jobnames_list scripts/$outName.sh)
        echo submitted $outName $pmcsmain_jobname

    done
}


# one chain job on cab repaired -- without central
non_central(){
    for i in $seedlist
    do
        randomseed=$(($i+1000000))
        ###### submit central
        outName="empty"

        ###### submit non-central with dependency on central
        sample_index=0
        for main in `ls -1 $gridDir | grep w321 | grep -v .$central.`;
        do
            prepare_script
            noncentral_jobnames[$sample_index]=$($DRYRUN $QSUB scripts/$outName.sh)
            echo submitted  $outName ${noncentral_jobnames[$sample_index]}
            (( sample_index++ ))
            #break # only one test
        done
    done
}

only_central(){
    for i in $seedlist
    do
        randomseed=$(($i+1000000))
        ###### submit central
        outName="empty"
        main=`ls -1 $gridDir | grep w321 | grep .$central.`
        prepare_script
        central_jobname=$($DRYRUN $QSUB scripts/$outName.sh)
        echo submitted $sampleName $central_jobname
    done
}

only_pmcs(){
    for i in $seedlist
    do
        randomseed=$(($i+1010000))
        main=`ls -1 $gridDir | grep w321 | grep .$central.`
        pmcsmain=`echo $main | sed "s|$central|pmcs$central|g"`
        main=$pmcsmain
        prepare_script
        pmcsmain_jobname=$($DRYRUN $QSUB scripts/$outName.sh)
        echo submited $sampleName $pmcsmain_jobname
    done

}


# JOB CHAIN NOT WORKING ON CAB
job_chain_NOCAB(){
    for i in `seq 7 7`
    do
        randomseed=$(($i+1000000))
        ###### submit central
        outName="empty"
        main=`ls -1 $gridDir | grep w321 | grep .$central.`
        prepare_script
        central_jobname=$($DRYRUN $QSUB scripts/$outName.sh)
        echo submitted $sampleName $central_jobname

        # make dummy main, which will simulate the delete
        main_delete=`echo $main | sed "s|$central|delete$central|g"`

        ###### submit non-central with dependency on central
        sample_index=0
        for main in `ls -1 $gridDir | grep w321 | grep -v .$central.`;
        do
            prepare_script
            noncentral_jobnames[$sample_index]=$($DRYRUN $QSUB -W depend=afterok:$central_jobname scripts/$outName.sh)
            echo submitted  $sampleName ${noncentral_jobnames[$sample_index]}
            (( sample_index++ ))
        done

        ###### submit delete-central-saves with dependence on non-centrals
        #IFS=:
        #noncentral_jobnames_list="${noncentral_jobnames[*]}"
        #unset IFS

        #main=$main_delete
        #prepare_script

        #deletecentral_jobname=$($DRYRUN $QSUB -W depend=afterok:$noncentral_jobnames_list scripts/$outName.sh)
        #echo -n submited $sampleName $deletecentral_jobname
        echo
        echo
    done
}


# OLD JOBS -- no chained
old_job_NOCAB(){
    #for main in `ls -1 $RESBOSINTFACE/grids/45PDFs | grep w321 |  grep out | grep .00.`;
    #for main in `ls -1 $RESBOSINTFACE/grids/w/1s | grep w321 | grep central`;
    for main in `ls -1 $RESBOSINTFACE/grids/w/1s | grep w321 | grep -v central`;
    do
        for i in `seq 1 10`
        do
            randomseed=$(($i+1234567))
            mainBase=`basename $main .out`
            outName=`echo $SCRIPTNAME | sed "s|TMPL|$mainBase|g"`.$i
            cat $SCRIPTNAME.sh | sed "s|MAIN|$main|g;s|OUTNAME|$outName|g;s|RANDOMSEED|${randomseed}|g" > scripts/respmcs_$outName.sh

            #echo $QSUB -q medium@d0cabsrv2 scripts/$outName.sh
            $DRYRUN $QSUB scripts/respmcs_$outName.sh
        done
    done
}


#####################
#       MAIN        #
#####################

# make only the local scripts
# echo running local
# i=0
# process=reswenu
# gridDir=/prj_root/7055/wmass2/jcuth/epmcs_analysis/resbosa_interface/grids/CT10nnlo_correctb0max
# central=w-_tev2_00
# setup_local
# #run_dyres
# exit 0

# kerberos init
#  if [[ `hostname` != ui3-clued0 ]];
#  then
#      echo " KERBEROS NOTICE: you have to be on ui3-clued0 or change certificate path in script"
#      exit 1
#  fi

$DRYRUN kinit $USER@FNAL.GOV || exit 1
$DRYRUN kx509 || exit 1

echo clearing D0mino home folder
mv /d0mino/jcuth/genpmcs_* /prj_root/7056/wmass2/jcuth/cabout_logs/

# PDF
job_seed_range="510 519"
job_seed_range="120 129"
job_seed_range="130 139"
job_seed_range="140 149"
job_seed_range="150 159"
job_seed_range="160 169"
job_seed_range="170 179"
job_seed_range="180 189"
job_seed_range="190 199"
job_seed_range="200 209"
job_seed_range="210 219"
job_seed_range="220 229"
###job_seed_range="230 239"
job_seed_range="230 249"
###job_seed_range="250 259"
job_seed_range="250 269"
###job_seed_range="270 279"
job_seed_range="270 289"
###job_seed_range="290 299"
###job_seed_range="300 309"
###job_seed_range="310 319"
job_seed_range="290 319"
job_seed_range="320 349"
job_seed_range="350 399"
job_seed_range="350 399"
job_seed_range="400 449"
job_seed_range="450 499"
job_seed_range="500 549"

# PT
job_seed_range="120 199"
job_seed_range="200 299"
job_seed_range="300 399"
job_seed_range="400 499"
job_seed_range="500 599"

# new pt
job_seed_range="120 120"

seedlist=`seq $job_seed_range`
# seedlist="122 151 155 163 165 185 188 220 221 223 226 227 228 229"
# seedlist="334 338 339 340 341 344 346 348 349 357 363 367 372 373 375 377 380 385 386 387 390 398 399"
#           334 338 339 340 341 344 346 348 349 357 363 367 372 373 375 377 380 385 386 387 390 398 399
#seedlist="334 341 344 363 367 372 373 375 380 410 423 425 447"

nodenum=1



#only_central
#non_central
#only_pmcs
chain_job

exit 0
