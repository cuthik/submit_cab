#!/bin/bash

##
## @file submit_resbos_and_pmcs.sh
##
## Description of the script file
##
## @author cuto <Jakub.Cuth@cern.ch>
## @date 2014-02-20

DRYRUN="echo "
DRYRUN=

QSUB=/usr/bin/qsub

# 1 sigma
resbosintface=/prj_root/7055/wmass2/jcuth/epmcs_analysis/resbosa_interface
SCRIPTNAME=respmcs_OneWeight_TMPL

#pdf
#gridDir=$resbosintface/grids/45PDFs
#central=00
##theo unc
gridDir=$resbosintface/grids/w/1s
central=central


# ONE JOB
prepare_script(){
    mainBase=`basename $main .out`
    ykBase=`echo $mainBase | sed "s|w321|yk|g"`
    sampleName=`echo $mainBase | rev | cut -d. -f1 | rev`
    outName=respmcs_${sampleName}_${randomseed}
    cat $SCRIPTNAME.sh | sed "s|MAIN|$gridDir/$mainBase.out|g;
                              s|YK|$gridDir/$ykBase.out|g;
                              s|CENTRAL|$central|g;
                              s|EDITWARNING|Warning! Do not edit this file, it was generated automatically: `date`|g;
                              s|SAMPLENAME|$sampleName|g;
                              s|RANDOMSEED|${randomseed}|g" > scripts/$outName.sh
}

prepare_script_local(){
    mainBase=`basename $main .out`
    ykBase=`echo $mainBase | sed "s|w321|yk|g"`
    sampleName=`echo $mainBase | rev | cut -d. -f1 | rev`_local
    outName=respmcs_${sampleName}_${randomseed}
    cat $SCRIPTNAME.sh | sed "s|MAIN|$gridDir/$mainBase.out|g;
                              s|YK|$gridDir/$ykBase.out|g;
                              s|CENTRAL|$central|g;
                              s|EDITWARNING|Warning! Do not edit this file, it was generated automatically: `date`|g;
                              s|SAMPLENAME|$sampleName|g;
                              s|RANDOMSEED|${randomseed}|g" > scripts/$outName.local.sh

    chmod +x scripts/$outName.local.sh
}


setup_local(){
    randomseed=$(($i+2010000))
    ###### submit central
    outName="empty"
    main=`ls -1 $gridDir | grep w321 | grep .$central.`
    prepare_script_local

    ###### submit non-central with dependency on central
    sample_index=0
    for main in `ls -1 $gridDir | grep w321 | grep -v .$central.`;
    do
        prepare_script_local
    done
}


# one chain job on cab repaired
# 1010000 - ct10nn
# 1020000 - cteq66
chain_job(){
    for i in `seq 101 106`
    do
        randomseed=$(($i+1020000))
        ###### submit central
        outName="empty"
        main=`ls -1 $gridDir | grep w321 | grep .$central.`
        prepare_script
        central_jobname=$($DRYRUN $QSUB scripts/$outName.sh)
        echo submitted $outName $central_jobname 

        ###### submit non-central with dependency on central
        sample_index=0
        for main in `ls -1 $gridDir | grep w321 | grep -v .$central.`;
        do
            prepare_script
            noncentral_jobnames[$sample_index]=$($DRYRUN $QSUB -W depend=afterok:$central_jobname scripts/$outName.sh)
            #noncentral_jobnames[$sample_index]=$($DRYRUN $QSUB scripts/$outName.sh)
            echo submitted  $outName ${noncentral_jobnames[$sample_index]}
            (( sample_index++ ))
        done
    done
}



# one chain job on cab repaired -- without central
no_central(){
    for i in `seq 102 200`
    do
        randomseed=$(($i+1000000))
        ###### submit central
        outName="empty"

        ###### submit non-central with dependency on central
        sample_index=0
        for main in `ls -1 $gridDir | grep w321 | grep -v .$central.`;
        do
            prepare_script
            noncentral_jobnames[$sample_index]=$($DRYRUN $QSUB scripts/$outName.sh)
            echo submitted  $outName ${noncentral_jobnames[$sample_index]}
            (( sample_index++ ))
            #break # only one test
        done
    done
}

only_central(){
    for i in `seq 8 8`
    do
        randomseed=$(($i+1000000))
        ###### submit central
        outName="empty"
        main=`ls -1 $gridDir | grep w321 | grep .$central.`
        prepare_script
        central_jobname=$($DRYRUN $QSUB scripts/$outName.sh)
        echo submitted $sampleName $central_jobname
    done
}




# JOB CHAIN NOT WORKING ON CAB
job_chain_NOCAB(){
    for i in `seq 7 7`
    do
        randomseed=$(($i+1000000))
        ###### submit central
        outName="empty"
        main=`ls -1 $gridDir | grep w321 | grep .$central.`
        prepare_script
        central_jobname=$($DRYRUN $QSUB scripts/$outName.sh)
        echo submitted $sampleName $central_jobname

        # make dummy main, which will simulate the delete
        main_delete=`echo $main | sed "s|$central|delete$central|g"`

        ###### submit non-central with dependency on central
        sample_index=0
        for main in `ls -1 $gridDir | grep w321 | grep -v .$central.`;
        do
            prepare_script
            noncentral_jobnames[$sample_index]=$($DRYRUN $QSUB -W depend=afterok:$central_jobname scripts/$outName.sh)
            echo submitted  $sampleName ${noncentral_jobnames[$sample_index]}
            (( sample_index++ ))
        done

        ###### submit delete-central-saves with dependence on non-centrals
        #IFS=:
        #noncentral_jobnames_list="${noncentral_jobnames[*]}"
        #unset IFS

        #main=$main_delete
        #prepare_script

        #deletecentral_jobname=$($DRYRUN $QSUB -W depend=afterok:$noncentral_jobnames_list scripts/$outName.sh)
        #echo -n submited $sampleName $deletecentral_jobname
        echo
        echo
    done
}


# OLD JOBS -- no chained
old_job_NOCAB(){
    #for main in `ls -1 $RESBOSINTFACE/grids/45PDFs | grep w321 |  grep out | grep .00.`;
    #for main in `ls -1 $RESBOSINTFACE/grids/w/1s | grep w321 | grep central`;
    for main in `ls -1 $RESBOSINTFACE/grids/w/1s | grep w321 | grep -v central`;
    do
        for i in `seq 1 10`
        do
            randomseed=$(($i+1234567))
            mainBase=`basename $main .out`
            outName=`echo $SCRIPTNAME | sed "s|TMPL|$mainBase|g"`.$i
            cat $SCRIPTNAME.sh | sed "s|MAIN|$main|g;s|OUTNAME|$outName|g;s|RANDOMSEED|${randomseed}|g" > scripts/respmcs_$outName.sh

            #echo $QSUB -q medium@d0cabsrv2 scripts/$outName.sh
            $DRYRUN $QSUB scripts/respmcs_$outName.sh
        done
    done
}


#####################
#       MAIN        #
#####################

# make only the local scripts
#setup_local
#exit 0



# kerberos init
if [[ `hostname` != ui3-clued0 ]];
then
    echo " KERBEROS NOTICE: you have to be on ui3-clued0 or change certificate path in script"
    exit 1
fi

kinit $USER@FNAL.GOV || exit 1
kx509 || exit 1


#only_central
no_central
#chain_job

exit 0



